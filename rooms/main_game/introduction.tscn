[gd_scene load_steps=16 format=2]

[ext_resource path="res://entities/base/components/scene/cutscene_player.gd" type="Script" id=1]
[ext_resource path="res://database/player.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/audio/musics/music_test.ogg" type="AudioStream" id=3]

[sub_resource type="GDScript" id=2]
resource_name = "introduction_scene"
script/source = "extends GameScene

var intro_dialogue
var transition = preload(\"res://gui/scene/scene_transition_black.tscn\").instance()

onready var timer = get_node(\"Timer\")

func _ready():
	Game.lock_player_input()
	add_child(transition)
	transition.fade_in(true)
	timer.start()

func _process(delta):
	pass


func timer_timeout():
	intro_dialogue = Dialogue.start_dialogue(\"main_game/introduction/not_opening_door\")
	intro_dialogue.setup_signals(self)

func dialogue_finished():
	transition.fade_out()
	print(\"deletado\")
	Game.unlock_player_input()

func door_cutscene_ended():
	print(\"cutscene da porta terminada, enviando o jogador para a cena do suicida\")
"

[sub_resource type="Environment" id=1]
background_mode = 1

[sub_resource type="GDScript" id=4]
resource_name = "intro_door_interaction"
script/source = "extends InteracteableArea

var suicidal_apartment_scene = preload(\"res://rooms/main_game/suicidal_apartment_entrance.tscn\")

func interact_action():
#	print(\"oioioioi\")
	Game.lock_player_input()
	Cutscene.start_cutscene( Game.current_scene.get_node(\"door_cutscene_1\") )
	Cutscene.current_cutscene_node.connect(\"cutscene_node_ended\", self, \"door_cutscene_ended\")
#	Habilitar cutscene onde mostra a mão do gaspard chegasndo na porta, aí vai pedir para o jogador pressionar o botão de interação

func door_cutscene_ended():
	print(\"cutscene terminada, trocando de cena para o apartamento\")
	Game.scene_manager.change_scene(suicidal_apartment_scene, true)

#Conectar o sinal de término da cutscene dentro desse nó
#Trocar de Cena para o apartamento do suicída e começar a cutscene logo seguida

#-= 
# Adicionar um evento onde o jogo já se introduziu, e colocar um evento que
# Mostra que a cutscene do apartamento foi finalizada
#=-
"

[sub_resource type="BoxShape" id=3]
extents = Vector3( 4.29638, 1, 1 )

[sub_resource type="Animation" id=5]
resource_name = "0"
tracks/0/type = "method"
tracks/0/path = NodePath("door_cutscene_1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "intro_door_camera" ],
"method": "change_camera"
} ]
}

[sub_resource type="Animation" id=6]
resource_name = "1"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("noise_generator:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.498039 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("noise_generator:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=11]
resource_name = "2"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("noise_generator:self_modulate")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0, 0, 0.498039 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "3"
tracks/0/type = "method"
tracks/0/path = NodePath("door_cutscene_1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "start_dialogue"
} ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("background:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("noise_generator:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=10]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("noise_generator:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("background:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("noise_generator:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}

[sub_resource type="OpenSimplexNoise" id=7]
octaves = 1
period = 2.8

[sub_resource type="NoiseTexture" id=8]
flags = 3
noise = SubResource( 7 )

[sub_resource type="GDScript" id=9]
resource_name = "noise_generator"
script/source = "extends TextureRect

func _process(delta):
	texture.width = get_viewport().size.x
	texture.height = get_viewport().size.y
	texture.noise.seed += 1
"

[node name="intro" type="Spatial"]
script = SubResource( 2 )
music = ExtResource( 3 )
mute_music_when_entering = true

[node name="player" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.249, 0 )

[node name="OmniLight" type="OmniLight" parent="player"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.039304, 9.42129, -0.360017 )
light_energy = 3.936
omni_range = 6.785

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.88792, 0.459998, 0, -0.459998, 0.88792, 0, 10.0936, 9.28199 )
current = true

[node name="Timer" type="Timer" parent="."]
wait_time = 4.0
one_shot = true

[node name="InteracteableArea" type="Area" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -63.717 )
script = SubResource( 4 )

[node name="CollisionShape" type="CollisionShape" parent="InteracteableArea"]
shape = SubResource( 3 )

[node name="CSGBox" type="CSGBox" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5.08258, -65.9441 )
width = 6.22619
height = 11.7592

[node name="intro_door_camera" type="Camera" parent="."]
transform = Transform( -0.0626538, -0.0775021, 0.995022, -0.00487045, 0.996992, 0.0773489, -0.998023, 4.66583e-10, -0.0628428, 1.48668, 6.29487, -64.4298 )
fov = 54.355

[node name="door_cutscene_1" type="AnimationPlayer" parent="."]
anims/0 = SubResource( 5 )
anims/1 = SubResource( 6 )
anims/2 = SubResource( 11 )
anims/3 = SubResource( 12 )
anims/RESET = SubResource( 10 )
script = ExtResource( 1 )
dialogue_sections = "{
\"3\":\"main_game/introduction/leonnard_calling_gaspard\",
}"

[node name="noise_generator" type="TextureRect" parent="."]
visible = false
self_modulate = Color( 1, 1, 1, 0 )
margin_right = 512.0
margin_bottom = 512.0
texture = SubResource( 8 )
script = SubResource( 9 )

[node name="background" type="ColorRect" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[connection signal="timeout" from="Timer" to="." method="timer_timeout"]
